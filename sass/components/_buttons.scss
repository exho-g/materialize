// shared styles
.btn,
.btn-flat,
.btn-soft,
.btn-outlined {
    border: $button-border;
    border-radius: $button-radius;
    display: inline-block;
    height: $button-height;
    line-height: $button-height;
    padding: $button-padding;
    //text-transform: uppercase;
    margin: 3px 0;
    vertical-align: middle;
    -webkit-tap-highlight-color: transparent; // Gets rid of tap active state

    &.tiny {
        height: 26px;
        line-height: 24px;
        font-size: 12px;
        padding: 0 12px;

        .icon,
        #{$icon-brand-selectors} {
            font-size: .8rem;

            &.right {
                margin-left: 10px;
            }

            &.left {
                margin-right: 10px;
            }
        }
    }

    &.small {
        height: $button-small-height;
        line-height: $button-small-height;
        font-size: $button-small-font-size;

        .icon,
        #{$icon-brand-selectors} {
            font-size: $button-small-icon-font-size;
        }
    }

    &.large {
        height: $button-large-height;
        line-height: $button-large-height;
        font-size: $button-large-font-size;
        padding: 0 28px;

        .icon,
        #{$icon-brand-selectors} {
            font-size: $button-large-icon-font-size;
        }
    }

    // Rounded Buttons
    &.rounded {
        border-radius: 35px;

        &.small {
            padding: 0 18px;
        }

        &.large {
            padding: 0 30px;
        }
    }
}

// Disabled shared style
.btn.disabled,
.btn-floating.disabled,
.btn-flat.disabled,
.btn-soft.disabled,
.btn:disabled,
.btn-floating:disabled,
.btn-flat:disabled,
.btn-soft:disabled,
.btn[disabled],
.btn-floating[disabled],
.btn-flat[disabled],
.btn-soft[disabled] {
    pointer-events: none;
    background-color: $button-disabled-background !important;
    box-shadow: none;
    color: $button-disabled-color !important;
    cursor: default;

    .icon,
    #{$icon-brand-selectors} {
        color: $button-disabled-color !important;
    }

    &:hover {
        background-color: $button-disabled-background !important;
        color: $button-disabled-color !important;
    }
}


.btn-outlined {
    &.tiny {
        line-height: 22px;
    }

    &.small {
        line-height: 28.4px;

        &.thin {
            line-height: 30.4px;
        }
    }

    &.large {
        line-height: 50px;

        &.thin {
            line-height: 52px;
        }
    }

    &.disabled,
    &:disabled,
    &[disabled] {
        pointer-events: none;
        cursor: default;
        background-color: transparent !important;
        color: $button-disabled-color !important;
        border-color: $button-disabled-background !important;
    }
}

// Shared icon styles
.btn,
.btn-floating,
.btn-flat,
.btn-soft,
.btn-outlined {
    border-bottom: unset; // remove anchor text style

    font-size: $button-font-size;
    outline: 0;

    .icon,
    #{$icon-brand-selectors} {
        font-size: $button-icon-font-size;
        line-height: inherit;
    }
}

// Shared focus button style
.btn,
.btn-floating,
.btn-soft {
    &:focus {
        background-color: var(--secondary-color-darken-10);
    }
}

// Raised Button
.btn {
    text-decoration: none;
    color: $button-raised-color;
    background-color: $button-raised-background;
    text-align: center;
    letter-spacing: .5px;
    box-shadow: $z-depth-1-shadow;
    transition: background-color .2s ease-out;
    cursor: pointer;

    &:hover {
        background-color: $button-raised-background-hover;
        box-shadow: $z-depth-1-half-shadow;
    }

    &.primary {
        background-color: var(--primary-color);

        &:hover {
            background-color: var(--primary-color-lighten-5);
        }

        &:focus {
            background-color: var(--primary-color-darken-10);
        }
    }

    @each $sP in $semanticPurposes {
        &.#{$sP} {
            background-color: var(--#{$sP}-color); //semanticColorLookUp($sP);

            &:hover {
                background-color: var(--#{$sP}-color-lighten-5); //lighten(semanticColorLookUp($sP), 5%);
            }

            &:focus {
                background-color: var(--#{$sP}-color-lighten-10); //darken(semanticColorLookUp($sP), 10%);
            }
        }
    }

    &.light {
        color: #222;
        background-color: #FAFAFA;

        &:hover {
            background-color: #EEE;
        }

        &:focus {
            background-color: #E0E0E0;
        }
    }

    &.dark,
    &.dark-light {
        background-color: #212121;

        &:hover {
            background-color: #424242;
        }

        &:focus {
            background-color: #616161;
        }
    }
}

// Floating button
.btn-floating {
    display: inline-block;
    color: $button-floating-color;
    position: relative;
    overflow: hidden;
    z-index: 1;
    width: $button-floating-size;
    height: $button-floating-size;
    line-height: $button-floating-size;
    padding: 0;
    background-color: $button-floating-background;
    border-radius: $button-floating-radius;
    box-shadow: $z-depth-1-shadow;
    transition: background-color .3s;
    cursor: pointer;
    vertical-align: middle;

    &:hover {
        background-color: $button-floating-background-hover;
        box-shadow: $z-depth-1-half-shadow;
    }

    &:before {
        border-radius: 0;
    }

    &.halfway-fab {
        &.left {
            right: auto;
            left: 24px;
        }

        position: absolute;
        right: 24px;
        bottom: -$button-floating-size * 0.5;
    }

    &.square {
        border-radius: $button-floating-square-default-radius;
    }

    .icon,
    #{$icon-brand-selectors} {
        width: inherit;
        display: inline-block;
        text-align: center;
        color: $button-floating-color;
        font-size: $button-large-icon-font-size;
        //line-height: $button-floating-size;
    }

    &.soft:not(.disabled) {
        background-color: var(--secondary-color-lighten-40);
        box-shadow: coloredShadow("x1", var(--secondary-color-hsl));
        transition: background-color .3s,
            box-shadow .25s;

        &:hover {
            background-color: var(--secondary-color-lighten-30);
            box-shadow: coloredShadow("x1_2", var(--secondary-color-hsl));
        }

        .icon,
        #{$icon-brand-selectors} {
            color: var(--secondary-color-darken-5);
        }

        &.primary {
            background-color: var(--primary-color-lighten-40);
            box-shadow: coloredShadow("x1", var(--primary-color-hsl));

            &:hover {
                background-color: var(--primary-color-lighten-30);
                box-shadow: coloredShadow("x1_2", var(--primary-color-hsl));
            }

            .icon,
            #{$icon-brand-selectors} {
                color: var(--primary-color-darken-5);
            }
        }

        @each $sP in $semanticPurposes {
            &.#{$sP} {
                background-color: var(--#{$sP}-color-lighten-40); //lighten(semanticColorLookUp($sP), 40%);
                box-shadow: coloredShadow("x1", var(--#{$sP}-color-hsl)); //coloredShadow("x1", semanticColorLookUp($sP));

                &:hover {
                    background-color: var(--#{$sP}-color-lighten-30); //lighten(semanticColorLookUp($sP), 30%);
                    box-shadow: coloredShadow("x1_2", var(--#{$sP}-color-hsl)); //coloredShadow("x1_2", semanticColorLookUp($sP));
                }

                .icon,
                #{$icon-brand-selectors} {
                    color: var(--#{$sP}-color-darken-5); //darken(semanticColorLookUp($sP), 5%);
                }
            }
        }
    }

    &.large {
        &.halfway-fab {
            bottom: -$button-floating-large-size * 0.5;
        }

        &.square {
            border-radius: $button-floating-square-large-radius;
        }

        width: $button-floating-large-size;
        height: $button-floating-large-size;
        padding: 0;

        .icon,
        #{$icon-brand-selectors} {
            line-height: $button-floating-large-size;
        }
    }

    &.small {
        &.halfway-fab {
            bottom: -$button-floating-small-size * 0.5;
        }

        &.square {
            border-radius: $button-floating-square-small-radius;
        }

        width: $button-floating-small-size;
        height: $button-floating-small-size;

        .icon,
        #{$icon-brand-selectors} {
            line-height: $button-floating-small-size;
            font-size: $button-small-icon-font-size;
        }
    }
}

// button fix
button.btn-floating {
    border: $button-border;
}

// Fixed Action Button
.fixed-action-btn {
    &.active {
        ul {
            visibility: visible;
        }
    }

    // Directions
    &.direction-left,
    &.direction-right {
        padding: 0 0 0 15px;

        ul {
            text-align: right;
            right: 64px;
            top: 50%;
            transform: translateY(-50%);
            height: 100%;
            left: auto;
            /*width 100% only goes to width of button container */
            width: 500px;

            li {
                display: inline-block;
                margin: 7.5px 15px 0 0;
            }
        }
    }

    &.direction-right {
        padding: 0 15px 0 0;

        ul {
            text-align: left;
            direction: rtl;
            left: 64px;
            right: auto;

            li {
                margin: 7.5px 0 0 15px;
            }
        }
    }

    &.direction-bottom {
        padding: 0 0 15px 0;

        ul {
            top: 64px;
            bottom: auto;
            display: flex;
            flex-direction: column-reverse;

            li {
                margin: 15px 0 0 0;
            }
        }
    }

    &.toolbar {
        &.active {
            &>a {

                .icon,
                #{$icon-brand-selectors} {
                    opacity: 0;
                }
            }
        }

        padding: 0;
        height: $button-floating-large-size;

        ul {
            display: flex;
            top: 0;
            bottom: 0;
            z-index: 1;

            li {
                flex: 1;
                display: inline-block;
                margin: 0;
                height: 100%;
                transition: none;

                a {
                    display: block;
                    overflow: hidden;
                    position: relative;
                    width: 100%;
                    height: 100%;
                    background-color: transparent;
                    box-shadow: none;
                    color: #fff;
                    line-height: $button-floating-large-size;
                    z-index: 1;
                    border-bottom: unset !important;

                    .icon,
                    #{$icon-brand-selectors} {
                        line-height: inherit;
                    }
                }
            }
        }
    }

    position: fixed;
    right: 23px;
    bottom: 23px;
    padding-top: 15px;
    margin-bottom: 0;
    z-index: 997;

    ul {
        left: 0;
        right: 0;
        text-align: center;
        position: absolute;
        bottom: 64px;
        margin: 0;
        visibility: hidden;

        li {
            margin-bottom: 15px;
        }

        a.btn-floating {
            opacity: 0;
        }
    }

    .fab-backdrop {
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        width: $button-floating-size;
        height: $button-floating-size;
        background-color: $button-floating-background;
        border-radius: $button-floating-radius;
        transform: scale(0);
    }
}

// Flat button
.btn-flat {
    box-shadow: none;
    background-color: transparent;
    color: $button-flat-color;
    cursor: pointer;
    margin: 2px 0;
    transition: background-color .2s;

    &:focus,
    &:hover {
        box-shadow: none;
    }

    &:focus {
        background-color: rgba(0, 0, 0, .1);
    }

    &.disabled,
    &.btn-flat[disabled] {
        background-color: transparent !important;
        color: $button-flat-disabled-color !important;
        cursor: default;
    }
}

// Soft button
.btn-soft {
    box-shadow: none;
    text-decoration: none;
    text-align: center;
    letter-spacing: .5px;
    cursor: pointer;
    font-weight: 500;
    margin: 2px 0;
    transition: background-color .2s ease-out;

    @include soft-colors;

    @include soft-colors-hover-focus;
}

// Outlined button
.btn-outlined {
    box-shadow: none;
    background-color: transparent;
    color: $button-raised-background;
    text-decoration: none;
    text-align: center;
    letter-spacing: .5px;
    margin: 2px 0;
    line-height: 34px;
    padding: 0 14px;
    border-radius: 5px;
    border: 1px solid $button-raised-background;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    transition: all .2s ease-out;

    &:not(.as-badge) {
        cursor: pointer;

        &:hover {
            background-color: hsla(var(--secondary-color-hsl), 0.1);
            box-shadow: unset;
        }

        &:focus,
        &:active {
            background-color: hsla(var(--secondary-color-hsl), 0.3);
        }
    }

    &.thick {
        border-width: 2px;
        font-weight: 500;

        &:not(.small):not(.tiny):not(.large) {
            line-height: 32px;
        }
    }

    &.primary {
        color: var(--primary-color);
        border-color: var(--primary-color);

        &:not(.as-badge) {
            &:hover {
                background-color: hsla(var(--primary-color-hsl), 0.1);
            }

            &:focus,
            &:active {
                background-color: hsla(var(--primary-color-hsl), 0.3);
            }
        }
    }

    @each $sP in $semanticPurposes {
        &.#{$sP} {
            color: var(--#{$sP}-color); //semanticColorLookUp($sP);
            border-color: var(--#{$sP}-color); //semanticColorLookUp($sP);

            &:not(.as-badge) {
                &:hover {
                    background-color: hsla(var(--#{$sP}-color-hsl), 0.1); //rgba(semanticColorLookUp($sP), 0.1);
                }

                &:focus,
                &:active {
                    background-color: hsla(var(--#{$sP}-color-hsl), 0.3); //rgba(semanticColorLookUp($sP), 0.3);
                }
            }
        }
    }

    &.light {
        color: #FFF;
        border-color: #FFF;

        &:not(.as-badge) {
            &:hover {
                background-color: rgba(255, 255, 255, 0.2);
            }

            &:focus,
            &:active {
                background-color: rgba(255, 255, 255, 0.3);
            }
        }
    }

    &.dark,
    &.dark-light {
        color: #212121;
        border-color: #212121;

        &:not(.as-badge) {
            &:hover {
                background-color: rgba(#212121, 0.1);
            }

            &:focus,
            &:active {
                background-color: rgba(#212121, 0.3);
            }
        }
    }
}

// Block button
.block {
    display: block !important;
}